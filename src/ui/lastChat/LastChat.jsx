"use client";
import { useState, useEffect } from "react";
import "./lastChat.css";

export default function LastChat({ visible, onClose }) {
  const [messages, setMessages] = useState([]);
  const [currentText, setCurrentText] = useState("");
  const [showTyping, setShowTyping] = useState(false);

  const baynurMessage =
    "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –¥–Ω–∏ –∫–∞–∫ –±—É–¥—Ç–æ –ø—É—Å—Ç—ã–µ‚Ä¶ –•–æ—á–µ—Ç—Å—è —Å–Ω–æ–≤–∞ –±—ã—Ç—å —Ä—è–¥–æ–º. –∏ –¥–µ–ª–∏—Ç—å—Å—è –º–æ–º–µ–Ω—Ç–∞–º–∏ –≤–º–µ—Å—Ç–µ.";
  const begimayMessage = "–Ø —Ç–æ–∂–µ —Ö–æ—á—É –±—ã—Ç—å —Ä—è–¥–æ–º‚Ä¶ –ù–µ –æ—Ç–ø—É—Å–∫–∞–π –º–µ–Ω—è.";

  useEffect(() => {
    if (!visible) return;

    setMessages([{ sender: "–†–∞–º–∏—Å", text: baynurMessage }]);
    setCurrentText("");
    setShowTyping(true);

    let index = 0;
    const typingInterval = setInterval(() => {
      setCurrentText(begimayMessage.slice(0, index + 1));
      index++;
      if (index === begimayMessage.length) {
        clearInterval(typingInterval);
        setMessages((prev) => [
          ...prev,
          { sender: "–ù–∞—Ä–≥–∏–∑üíó", text: begimayMessage },
        ]);
        setShowTyping(false);
      }
    }, 100);

    return () => clearInterval(typingInterval);
  }, [visible]);

  if (!visible) return null;

  return (
    <div className="chat-overlay">
      {/* –ö—Ä–µ—Å—Ç–∏–∫ –≤—ã–Ω–µ—Å–µ–Ω –∑–∞ –ø—Ä–µ–¥–µ–ª—ã –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ */}
      <button className="close-btn" onClick={onClose}>
        ‚úñÔ∏è
      </button>

      <div className="chat-container">
        {messages.map((msg, i) => (
          <div
            key={i}
            className={`chat-message ${
              msg.sender === "–†–∞–º–∏—Å" ? "chat-right" : "chat-left"
            }`}
          >
            <p className="person">{msg.sender}</p>
            <div className="bubble">{msg.text}</div>
          </div>
        ))}

        {showTyping && (
          <div className="chat-message chat-left">
            <p className="person">–ù–∞—Ä–≥–∏–∑üíó..</p>
            <div className="bubble">{currentText || "‚Ä¶"}</div>
          </div>
        )}
      </div>
    </div>
  );
}
